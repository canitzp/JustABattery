buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${project.forge_gradle_version}", changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'idea'

version = "${project.mod_version}"
group = "${project.mod_namespace}"
archivesBaseName = "${project.mod_name}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
    
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                justabattery {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run_server')
            property 'forge.logging.console.level', 'debug'

            mods {
                justabattery {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run_gametest')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'justabattery'

            mods {
                justabattery {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'justabattery', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                justabattery {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://maven.blamejared.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"
    //implementation fg.deobf("mezz.jei:jei-${project.jei_version}")
    //implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.18.1-7.1.1-pre.55")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "JustABattery",
                "Specification-Vendor": "canitzp",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"canitzp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}
